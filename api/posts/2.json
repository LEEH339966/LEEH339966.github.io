{"total":17,"pageSize":10,"pageCount":2,"data":[{"title":"shell程序设计","slug":"shell程序设计","date":"2018-06-17T14:35:00.000Z","updated":"2020-12-03T03:40:46.637Z","comments":true,"path":"api/articles/shell程序设计.json","excerpt":"<hr>\n<hr>\n<h1 id=\"shell脚本的建立与执行\"><a href=\"#shell脚本的建立与执行\" class=\"headerlink\" title=\"shell脚本的建立与执行\"></a>shell脚本的建立与执行</h1><p>shell是一个交互式的命令解释程序，同时也是一个脚本式程序设计语言，shell是Unix/Linux系统的标准组成部分，在多年的发展和完善过程中，shell形成了很多版本，现在较为流行的有sh、bash、csh和ksh，各个版本之间存在着不兼容的问题，本章主要介绍bash的程序设计。</p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/df4fecb7ab331a36435209eb7248146f.jpg","content":null,"text":"shell脚本的建立与执行shell是一个交互式的命令解释程序，同时也是一个脚本式程序设计语言，shell是Unix/Linux系统的标准组成部分，在多年的发展和完善过程中，shell形成了很多版本，现在较为流行的有sh、bash、csh和ksh，各个版本之间存在着不兼容的问题，","link":"","raw":null,"photos":[],"categories":[{"name":"SHELL程序设计","slug":"SHELL程序设计","count":1,"path":"api/categories/SHELL程序设计.json"}],"tags":[{"name":"SHELL程序设计","slug":"SHELL程序设计","count":1,"path":"api/tags/SHELL程序设计.json"}]},{"title":"WEKA把分类(Classification)和回归(Regression)","slug":"WEKA把分类(Classification)和回归(Regression)","date":"2018-06-17T03:22:08.000Z","updated":"2020-12-03T03:41:11.869Z","comments":true,"path":"api/articles/WEKA把分类(Classification)和回归(Regression).json","excerpt":"<hr>\n<h3 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1 简介\"></a>1 简介</h3><p>WEKA把分类(Classification)和回归(Regression)都放在“Classify”选项卡中，我们希望根据一个样本的一组特征，对目标进行预测。为了实现这一目的， 我们需要有一个训练数据集，这个数据集中每个实例的输入和输出都是已知的。观察训练集中的实例，可以建立起预测的模型。有了这个模型，我们就可以新的输出未知的实例进行预测了，衡量模型的好坏就在于预测的准确程度。 </p>\n<p>在WEKA中，待预测的目标（输出）被称作Class属性，这应该是来自分类任务的“类”。一般的，若Class属性是分类型时我们的任务才叫分类，Class属性是数值型时我们的任务叫回归。</p>\n<p>这里介绍用C4.5决策树算法对数据建立起分类模型，C4.5算法可以处理数值型的属性。</p>\n<p>首先选择数据源，然后切换到“Classify”选项卡，点击“Choose”按钮后可以看到很多分类或者回归的算法分门别类在一个树型框里。 树型框下方有一个“Filter…”按钮，点击可以根据数据集的特性过滤掉不合适的算法。选择“trees”下的“J48”，这就是需要的C4.5算法。 </p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/1d95e6a89ff1261aa812002b7c063e1e.jpg","content":null,"text":"1 简介WEKA把分类(Classification)和回归(Regression)都放在“Classify”选项卡中，我们希望根据一个样本的一组特征，对目标进行预测。为了实现这一目的， 我们需要有一个训练数据集，这个数据集中每个实例的输入和输出都是已知的。观察训练集中的实例，可","link":"","raw":null,"photos":[],"categories":[{"name":"数学建模","slug":"数学建模","count":2,"path":"api/categories/数学建模.json"}],"tags":[{"name":"WEKA","slug":"WEKA","count":1,"path":"api/tags/WEKA.json"},{"name":"分类与回归","slug":"分类与回归","count":1,"path":"api/tags/分类与回归.json"}]},{"title":"偏微分方程的数值解","slug":"偏微分方程的数值解","date":"2018-06-13T07:48:53.000Z","updated":"2020-12-04T02:12:08.373Z","comments":true,"path":"api/articles/偏微分方程的数值解.json","excerpt":"<hr>\n<p>Matlab提供了两种方法解决PDE问题  一是pdepe函数可以求解一般的PDEs，具有较大的通用性但是只支持命令行调用二是pde工具箱，可以求解特殊的pde问题，但是具有较大的局限性比如只能求解二阶的pde问题，并且不能解决偏微分方程组，但他提供了GUI界面。简化了操作并且可以通过FILE-&gt;Save As生成M文件</p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/254542c348e0401b7133784724f50cea.jpg","content":null,"text":"Matlab提供了两种方法解决PDE问题  一是pdepe函数可以求解一般的PDEs，具有较大的通用性但是只支持命令行调用二是pde工具箱，可以求解特殊的pde问题，但是具有较大的局限性比如只能求解二阶的pde问题，并且不能解决偏微分方程组，但他提供了GUI界面。简化了操作并且可","link":"","raw":null,"photos":[],"categories":[{"name":"数学建模","slug":"数学建模","count":2,"path":"api/categories/数学建模.json"}],"tags":[{"name":"数学","slug":"数学","count":1,"path":"api/tags/数学.json"},{"name":"偏微分方程","slug":"偏微分方程","count":1,"path":"api/tags/偏微分方程.json"}]},{"title":"Hexo更换主题并发布到github","slug":"Hexo更换主题并发布到github","date":"2018-06-09T11:52:29.000Z","updated":"2020-12-04T02:14:04.313Z","comments":true,"path":"api/articles/Hexo更换主题并发布到github.json","excerpt":"<hr>\n<hr>\n<h3 id=\"1下载主题\"><a href=\"#1下载主题\" class=\"headerlink\" title=\"1下载主题\"></a>1下载主题</h3><blockquote>\n<p>git clone <a href=\"https://github.com/iissnan/hexo-theme-next\">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>\n</blockquote>\n<p>启动服务器 hexo g    | |hexo s<br>换主题命令在git中 ：git clone <a href=\"https://github.com/iissnan/hexo-theme-next\">https://github.com/iissnan/hexo-theme-next</a> themes/next</p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/ee0e117577a998b7cbc1e7d74578d53a.jpg","content":null,"text":"1下载主题git clone https://github.com/iissnan/hexo-theme-next themes/next启动服务器 hexo g    | |hexo s<br>换主题命令在git中 ：git clone https://github.com/i","link":"","raw":null,"photos":[],"categories":[{"name":"hexo网站搭建","slug":"hexo网站搭建","count":4,"path":"api/categories/hexo网站搭建.json"}],"tags":[{"name":"hexo+github搭建网站","slug":"hexo-github搭建网站","count":2,"path":"api/tags/hexo-github搭建网站.json"}]},{"title":"Markdown简单入门","slug":"Markdown简单入门","date":"2018-06-08T13:37:43.000Z","updated":"2020-12-03T03:39:10.035Z","comments":true,"path":"api/articles/Markdown简单入门.json","excerpt":"<p> Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果.了解更多的详情可以在官方网站查看文档和本人参考的一些技术贴。</p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/afc6a3f40b8710341f17d2215b934c62.jpg","content":null,"text":" Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是","link":"","raw":null,"photos":[],"categories":[{"name":"Markdown教程","slug":"Markdown教程","count":1,"path":"api/categories/Markdown教程.json"}],"tags":[{"name":"Markdown","slug":"Markdown","count":1,"path":"api/tags/Markdown.json"},{"name":"文本语言","slug":"文本语言","count":1,"path":"api/tags/文本语言.json"}]},{"title":"“葱的战争”一个有趣的小游戏的背后的逻辑","slug":"“葱的战争”一个有趣的小游戏的背后的逻辑","date":"2018-06-07T14:18:31.000Z","updated":"2020-12-04T02:14:59.940Z","comments":true,"path":"api/articles/“葱的战争”一个有趣的小游戏的背后的逻辑.json","excerpt":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>前短时间，同学给看了一道，某个历年的考研机试题。我想用面向对象的方法去实现。</p>\n<blockquote>\n<p>一个m*n的棋盘，上面有k根葱，每根葱面朝方向为d（0123分别表示上下左右），每根葱一个战斗力f。每隔时间葱会向面朝方向走一格， 如果遇到棋盘边界，那么他将把面朝方向转180度（此回合葱不会走动），如果某个时刻有两个或以上的葱在同一位置，那么他们将发生 战争，只有战斗力最高的葱存活，其他的葱全部原地枯萎，不在走动，求经过t时间后所有葱的位置。</p>\n</blockquote>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/3b393d1890bed0b0d66b0784cc4d4b0d.jpg","content":null,"text":"题目前短时间，同学给看了一道，某个历年的考研机试题。我想用面向对象的方法去实现。一个m*n的棋盘，上面有k根葱，每根葱面朝方向为d（0123分别表示上下左右），每根葱一个战斗力f。每隔时间葱会向面朝方向走一格， 如果遇到棋盘边界，那么他将把面朝方向转180度（此回合葱不会走动），","link":"","raw":null,"photos":[],"categories":[{"name":"JAVA语言","slug":"JAVA语言","count":1,"path":"api/categories/JAVA语言.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"小游戏","slug":"小游戏","count":2,"path":"api/tags/小游戏.json"}]},{"title":"使用Hexo+Github搭建自己的个人网站","slug":"使用Hexo+Github搭建自己的个人网站","date":"2018-06-06T14:18:31.000Z","updated":"2020-12-03T03:42:08.635Z","comments":true,"path":"api/articles/使用Hexo+Github搭建自己的个人网站.json","excerpt":"<hr>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>经过自己探索，笔者终于搭建好了自己的个人主页，过程是蛮艰辛的，在这里特地和大家分享一下自己的经验。</p>","keywords":null,"cover":"https://leehbucket1.oss-cn-beijing.aliyuncs.com/img/ad16bfb15867f2b31729dd968156b307.jpg","content":null,"text":"前言经过自己探索，笔者终于搭建好了自己的个人主页，过程是蛮艰辛的，在这里特地和大家分享一下自己的经验。 [Figure] 恭喜你已经成功了！","link":"","raw":null,"photos":[],"categories":[{"name":"hexo网站搭建","slug":"hexo网站搭建","count":4,"path":"api/categories/hexo网站搭建.json"}],"tags":[{"name":"hexo+github搭建网站","slug":"hexo-github搭建网站","count":2,"path":"api/tags/hexo-github搭建网站.json"}]}]}